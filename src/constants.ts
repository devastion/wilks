import type { OneRepMaxFormula } from "./types.ts";

export const coefficients = {
  wilks: {
    male: [
      -216.0475144,
      16.2606339,
      -0.002388645,
      -0.00113732,
      7.01863 * Math.pow(10, -6),
      -1.291 * Math.pow(10, -8),
    ],
    female: [
      594.31747775582,
      -27.23842536447,
      0.82112226871,
      -0.00930733913,
      4.731582 * Math.pow(10, -5),
      -9.054 * Math.pow(10, -8),
    ],
  },
  wilks2020: {
    male: [
      47.46178854,
      8.472061379,
      0.07369410346,
      -0.001395833811,
      7.07665973070743 * Math.pow(10, -6),
      -1.20804336482315 * Math.pow(10, -8),
    ],
    female: [
      -125.4255398,
      13.71219419,
      -0.03307250631,
      -0.001050400051,
      9.38773881462799 * Math.pow(10, -6),
      -2.3334613884954 * Math.pow(10, -8),
    ],
  },
  dots: {
    male: [
      -307.75076,
      24.0900756,
      -0.1918759221,
      0.0007391293,
      -0.000001093,
    ],
    female: [
      -57.96288,
      13.6175032,
      -0.1126655495,
      0.0005158568,
      -0.0000010706,
    ],
  },
  ipf: {
    male: {
      clpl: [310.67, 857.785, 53.216, 147.0835],
      clbp: [86.4745, 259.155, 17.5785, 53.122],
      eqpl: [387.265, 1121.28, 80.6324, 222.4896],
      eqbp: [133.94, 441.465, 35.3938, 113.0057],
    },
    female: {
      clpl: [125.1435, 228.03, 34.5246, 86.8301],
      clbp: [25.0485, 43.848, 6.7172, 13.952],
      eqpl: [176.58, 373.315, 48.4534, 110.0103],
      eqbp: [49.106, 124.209, 23.199, 67.4926],
    },
  },
  ipfgl: {
    male: {
      clpl: [1199.72839, 1025.18162, 0.00921],
      clbp: [320.98041, 281.40258, 0.01008],
      eqpl: [1236.25115, 1449.21864, 0.01644],
      eqbp: [381.22073, 733.79378, 0.02398],
    },
    female: {
      clpl: [610.32796, 1045.59282, 0.03048],
      clbp: [142.40398, 442.52671, 0.04724],
      eqpl: [758.63878, 949.31382, 0.02435],
      eqbp: [221.82209, 357.00377, 0.02937],
    },
  },
} as const;

export const oneRepMaxFormulas: Record<OneRepMaxFormula, (weight: number, reps: number) => number> = {
  brzycki: (weight, reps) =>
    weight * (36 / (37 - reps)),
  epley: (weight, reps) =>
    weight * (1 + 0.0333 * reps),
  lander: (weight, reps) => (100 * weight) / (101.3 - (2.67123 * reps)),
  lombardi: (weight, reps) => weight * Math.pow(reps, 0.1),
  oconner: (weight, reps) => weight * (1 + 0.025 * reps),
} as const;
